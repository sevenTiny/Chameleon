@using Chameleon.Entity;
@using System.Linq;
@using SevenTiny.Bantina.Extensions.AspNetCore;
@using Chameleon.Infrastructure;
@{
    ViewData["Title"] = "VerificationItemUpdate";
    Layout = "~/Views/Shared/_LayoutHeaderStyle.cshtml";

    ResponseModel result = Model as ResponseModel ?? new ResponseModel();
    InterfaceVerification entity = result.Data as InterfaceVerification ?? new InterfaceVerification();
}
@{
    ViewData["Level_1"] = "接口校验管理";
    ViewData["Level_2"] = "编辑接口参数校验项";
}
@await Html.PartialAsync("~/Views/Shared/_PartialNavigation.cshtml")

<article class="page-container">
    <form class="form form-horizontal validate" id="form-article-add" method="post" action="/InterfaceVerification/VerificationItemUpdateLogic?parentId=@entity.ParentId">
        <input type="text" class="input-text" value="@entity.Id" name="id" hidden>
        <div class="row cl">
            <label class="form-label col-xs-4 col-sm-2"><span class="c-red">*</span>编码：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input type="text" class="input-text" style="background-color:#e8e8e8;" value="@entity.MetaFieldShortCode" name="MetaFieldShortCode" readonly="readonly" required>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-xs-4 col-sm-2"><span class="c-red">*</span>校验方式：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <span class="select-box">
                    <select name="RegularType" class="input select" onchange="typeSwitch(this)" id="sl_RegularType" required>
                        @foreach (var item in RegularTypeEnumHelper.GetRegularTypeEnums().ToArray())
                        {
                            <option value="@Convert.ToInt32(item)">@item.GetDescription()</option>
                        }
                    </select>
                </span>
            </div>
        </div>
        <div class="row cl" id="div_RegularExpression">
            <label class="form-label col-xs-4 col-sm-2"><span class="c-red">*</span>校验表达式：</label>
            <div class="formControls col-xs-7 col-sm-8">
                <input type="text" class="input-text" value="@entity.RegularExpression" id="ipt_RegularExpression" name="RegularExpression" placeholder="请输入C#语言支持的正则表达式" required minLength="2" maxlength="200">
            </div>
            <div class="formControls col-xs-1 col-sm-1">
                <a style="color:dodgerblue" target="_blank" href="/InterfaceVerification/GeneralRegularExpresion">常用正则</a>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-xs-4 col-sm-2"><span class="c-red">*</span>失败提示语：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input type="text" class="input-text" value="@entity.VerificationTips" name="VerificationTips" required minLength="2" maxlength="50">
            </div>
        </div>
        <div class="row cl">
            <div class="col-xs-8 col-sm-9 col-xs-offset-4 col-sm-offset-2">
                <input class="btn btn-primary radius" type="submit" value="&nbsp;&nbsp;提交&nbsp;&nbsp;">
                <button onClick="javascript:history.back(-1);" class="btn btn-default radius" type="button">&nbsp;&nbsp;取消&nbsp;&nbsp;</button>
                @if (!result.IsSuccess)
                {
                    <br /><br /><pre><span class="c-red">@result.Message</span></pre>
                }
            </div>
        </div>
    </form>
</article>

@await Html.PartialAsync("~/Views/Shared/_FooterScripts.cshtml")
@await Html.PartialAsync("~/Views/Shared/_CommonScript.cshtml")
@await Html.PartialAsync("~/Views/Shared/_FormValidate.cshtml")
<!--请在下方写此页面业务相关的脚本-->
<script type="text/javascript">
    $("#sl_RegularType").val('@entity.RegularType');

    //初始化预置显隐
    typeSwitch()

    //隐藏全部标签
    function hideAll() {
        $("#div_RegularExpression").hide()
        $("#ipt_RegularExpression").addClass("ignore")
    }

    //切换接口类型
    function typeSwitch() {
        //接口类型
        var interfaceType = $("#sl_RegularType").val()

        //先隐藏全部
        hideAll()

        //根据不同场景显示不同的表单
        //custom
        if (interfaceType == 0) {
            $("#div_RegularExpression").show()
            $("#ipt_RegularExpression").removeClass("ignore")
        }
    }
</script>
<!--/请在上方写此页面业务相关的脚本-->